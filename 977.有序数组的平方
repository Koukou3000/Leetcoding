题目给定的是排序过的数组。
	也就是说，数组头尾两端的数是绝对值最大的。
	例如，输入：`nums = [-4,-1,0,3,10]`，两边的绝对值是`4,10`，平方之后是`16,100`

---

详细过程：
	如果我们需要排序，那就需要==比较两边谁最大==，我们需要两个指针做到这件事。

​	我们从两端开始比较，得出一个最大的数，`100`
​	然后我们要比较第二大的数，得出第二大的数，`16`
​	重复类似于上面的两个过程，直到指针遍历完整个源数组

code
```
int* sortedSquares(int* nums, int numsSize, int* returnSize){

    int* ans = malloc(sizeof(int) * numsSize); 
    *returnSize = numsSize; 
    
    int left=0; //靠左的指针
    int right=numsSize-1; //靠右的指针
    int p=right; //用来写东西的指针
    
    while(left <= right){ //指针碰到一起的时候那一次循环也要有，不然会丢失一个数，不要忘记等于！
        int leftor; //暂时存放左边指针的计算结果
        int rightor; //暂时存放右边指针的计算结果
            
        leftor = nums[left] * nums[left];
        rightor = nums[right] * nums[right];
        if(leftor >= rightor)//避免出现绝对值相等的数的情况（例如：-1, +1），不要忘记等于！
        { 
            ans[p]=leftor;
            left++; 
        }
        else{
            ans[p]=rightor;
            right--;
        }
        p--; //在目的数组中负责写的指针
    }
    return ans;
}
```
